@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 13 17 23;
  --foreground: 248 248 248;
  --card: 22 27 34;
  --card-foreground: 248 248 248;
  --popover: 22 27 34;
  --popover-foreground: 248 248 248;
  --primary: 0 245 255;
  --primary-foreground: 13 17 23;
  --secondary: 33 38 45;
  --secondary-foreground: 248 248 248;
  --muted: 33 38 45;
  --muted-foreground: 155 155 155;
  --accent: 33 38 45;
  --accent-foreground: 248 248 248;
  --destructive: 255 0 64;
  --destructive-foreground: 248 248 248;
  --border: 48 54 61;
  --input: 33 38 45;
  --ring: 0 245 255;
  --radius: 0.5rem;
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    background: linear-gradient(
      135deg,
      #0a0e1a 0%,
      #111827 25%,
      #1f2937 50%,
      #0f172a 75%,
      #0a0e1a 100%
    );
    min-height: 100vh;
    overflow-x: hidden;
  }

  /* 滚动条样式 */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    @apply bg-matrix-surface;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-neon-blue/30 rounded;
  }

  ::-webkit-scrollbar-thumb:hover {
    @apply bg-neon-blue/50;
  }

  /* 网络安全动画效果 */
  .matrix-bg {
    position: relative;
    overflow: hidden;
  }

  .matrix-bg::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(
        circle at 25% 25%,
        rgba(0, 245, 255, 0.1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 75% 75%,
        rgba(57, 255, 20, 0.1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 50% 50%,
        rgba(191, 0, 255, 0.05) 0%,
        transparent 50%
      );
    animation: pulse 4s ease-in-out infinite;
    pointer-events: none;
  }

  .scan-line {
    position: relative;
    overflow: hidden;
  }

  .scan-line::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 245, 255, 0.3),
      transparent
    );
    animation: scan-line 3s ease-in-out infinite;
  }

  .glow-text {
    text-shadow:
      0 0 5px currentColor,
      0 0 10px currentColor,
      0 0 15px currentColor,
      0 0 20px currentColor;
  }

  .glow-border {
    box-shadow:
      0 0 5px currentColor,
      0 0 10px currentColor,
      inset 0 0 5px currentColor;
  }

  /* 数据流动效果 */
  .data-stream {
    position: relative;
    overflow: hidden;
  }

  .data-stream::before {
    content: "";
    position: absolute;
    top: 50%;
    left: -100%;
    width: 20px;
    height: 2px;
    background: linear-gradient(90deg, transparent, #00f5ff, transparent);
    animation: data-flow 2s linear infinite;
  }

  /* 3D登录界面动画 */
  @keyframes float {
    0%,
    100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes rotate-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes glow-pulse {
    0%,
    100% {
      box-shadow: 0 0 20px rgba(0, 245, 255, 0.5);
    }
    50% {
      box-shadow: 0 0 40px rgba(0, 245, 255, 0.8);
    }
  }

  .float-animation {
    animation: float 6s ease-in-out infinite;
  }

  .rotate-slow {
    animation: rotate-slow 20s linear infinite;
  }

  .login-form-enter {
    animation: slideInRight 0.8s ease-out;
  }

  .login-3d-enter {
    animation: slideInLeft 0.8s ease-out;
  }

  @keyframes slideInRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes slideInLeft {
    from {
      transform: translateX(-100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  /* 3D Canvas优化 */
  canvas {
    outline: none;
  }

  /* Toggle switch 样式 */
  .toggle-switch {
    appearance: none;
    width: 48px;
    height: 24px;
    background: #374151;
    border-radius: 12px;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 1px solid #4b5563;
  }

  .toggle-switch:checked {
    background: linear-gradient(135deg, #0052ff, #00d4ff);
    border-color: #00f5ff;
    box-shadow: 0 0 20px rgba(0, 245, 255, 0.4);
  }

  .toggle-switch::before {
    content: "";
    position: absolute;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: linear-gradient(135deg, #f8fafc, #cbd5e1);
    top: 2px;
    left: 2px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .toggle-switch:checked::before {
    transform: translateX(24px);
    background: linear-gradient(135deg, #ffffff, #f8fafc);
    box-shadow: 0 0 10px rgba(0, 245, 255, 0.6);
  }

  /* 霓虹发光文本 */
  .neon-text {
    text-shadow:
      0 0 5px currentColor,
      0 0 10px currentColor,
      0 0 15px currentColor,
      0 0 20px currentColor;
  }

  /* 霓虹发光边框 */
  .neon-border {
    position: relative;
    border: 1px solid currentColor;
    box-shadow:
      0 0 5px currentColor,
      0 0 10px currentColor,
      inset 0 0 5px currentColor;
  }

  .neon-border::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    opacity: 0.3;
    z-index: -1;
  }

  /* 量子效果 */
  .quantum-effect {
    position: relative;
    background: linear-gradient(
      135deg,
      transparent,
      rgba(191, 0, 255, 0.1),
      transparent
    );
    animation: quantum-phase 3s ease-in-out infinite;
  }

  .quantum-effect::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(191, 0, 255, 0.2),
      transparent
    );
    animation: quantum-phase 2s ease-in-out infinite reverse;
    pointer-events: none;
  }

  /* 神经网络效果 */
  .neural-effect {
    position: relative;
    background: linear-gradient(
      135deg,
      transparent,
      rgba(0, 255, 136, 0.1),
      transparent
    );
    animation: neural-pulse 2s ease-in-out infinite;
  }

  .neural-effect::before {
    content: "";
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle,
      transparent 30%,
      rgba(57, 255, 20, 0.1) 70%
    );
    animation: neural-pulse 1.5s ease-in-out infinite reverse;
    pointer-events: none;
  }

  /* 全息效果 */
  .hologram-effect {
    position: relative;
    background: linear-gradient(
      135deg,
      transparent 25%,
      rgba(0, 245, 255, 0.1) 25%,
      rgba(0, 245, 255, 0.1) 50%,
      transparent 50%,
      transparent 75%,
      rgba(0, 245, 255, 0.1) 75%
    );
    background-size: 20px 20px;
    animation: hologram-flicker 0.1s linear infinite;
  }

  .hologram-effect::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 245, 255, 0.3),
      transparent
    );
    animation: scan-line 3s linear infinite;
    pointer-events: none;
  }

  /* 能量流动效果 */
  .energy-flow {
    position: relative;
    overflow: hidden;
  }

  .energy-flow::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(0, 245, 255, 0.6),
      rgba(57, 255, 20, 0.6),
      rgba(191, 0, 255, 0.6),
      transparent
    );
    animation: energy-flow 2s linear infinite;
  }

  /* 3D浮动效果 */
  .float-3d {
    animation: float-3d 6s ease-in-out infinite;
    transform-style: preserve-3d;
  }

  /* 网络扫描效果 */
  .cyber-scan {
    position: relative;
    overflow: hidden;
  }

  .cyber-scan::after {
    content: "";
    position: absolute;
    top: -100%;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, #39ff14, transparent);
    animation: cyber-scan 3s linear infinite;
    box-shadow: 0 0 10px #39ff14;
  }

  /* 数据矩阵背景 */
  .matrix-background {
    position: relative;
    background:
      radial-gradient(
        circle at 20% 50%,
        rgba(57, 255, 20, 0.03) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 80% 20%,
        rgba(0, 245, 255, 0.03) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 40% 80%,
        rgba(191, 0, 255, 0.03) 0%,
        transparent 50%
      );
  }

  .matrix-background::before {
    content: "";
    position: absolute;
    inset: 0;
    background-image:
      linear-gradient(rgba(57, 255, 20, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(57, 255, 20, 0.03) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
  }
}

@layer components {
  .cyber-card {
    @apply bg-matrix-surface border border-matrix-border rounded-lg backdrop-blur-sm;
    background: linear-gradient(
      135deg,
      rgba(17, 24, 39, 0.9),
      rgba(31, 41, 55, 0.7)
    );
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.3),
      0 0 15px rgba(0, 212, 255, 0.1);
  }

  .cyber-card-enhanced {
    @apply cyber-card border-tech-accent/30;
    background: linear-gradient(
      135deg,
      rgba(17, 24, 39, 0.95),
      rgba(31, 41, 55, 0.8),
      rgba(15, 23, 42, 0.9)
    );
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.4),
      0 0 20px rgba(0, 212, 255, 0.2),
      inset 0 1px 0 rgba(0, 212, 255, 0.1);
  }

  .quantum-card {
    @apply cyber-card border-quantum-500/30;
    background: linear-gradient(
      135deg,
      rgba(17, 24, 39, 0.9),
      rgba(88, 28, 135, 0.1),
      rgba(31, 41, 55, 0.8)
    );
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.4),
      0 0 25px rgba(191, 0, 255, 0.3);
  }

  .neural-card {
    @apply cyber-card border-neural-500/30;
    background: linear-gradient(
      135deg,
      rgba(17, 24, 39, 0.9),
      rgba(5, 46, 22, 0.2),
      rgba(31, 41, 55, 0.8)
    );
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.4),
      0 0 25px rgba(0, 255, 136, 0.3);
  }

  .threat-indicator {
    @apply inline-flex items-center px-3 py-1.5 rounded-full text-xs font-mono font-medium;
    transition: all 0.3s ease;
  }

  .threat-critical {
    @apply threat-indicator bg-threat-critical/20 text-threat-critical border border-threat-critical/40 neon-text;
    box-shadow: 0 0 15px rgba(255, 0, 64, 0.4);
  }

  .threat-high {
    @apply threat-indicator bg-threat-high/20 text-threat-high border border-threat-high/40 neon-text;
    box-shadow: 0 0 15px rgba(255, 51, 102, 0.4);
  }

  .threat-medium {
    @apply threat-indicator bg-threat-medium/20 text-threat-medium border border-threat-medium/40 neon-text;
    box-shadow: 0 0 15px rgba(255, 136, 0, 0.4);
  }

  .threat-low {
    @apply threat-indicator bg-threat-low/20 text-threat-low border border-threat-low/40 neon-text;
    box-shadow: 0 0 15px rgba(57, 255, 20, 0.4);
  }

  .threat-info {
    @apply threat-indicator bg-threat-info/20 text-threat-info border border-threat-info/40 neon-text;
    box-shadow: 0 0 15px rgba(0, 245, 255, 0.4);
  }

  .threat-quantum {
    @apply threat-indicator bg-threat-quantum/20 text-threat-quantum border border-threat-quantum/40 neon-text;
    box-shadow: 0 0 15px rgba(191, 0, 255, 0.4);
  }

  .threat-neural {
    @apply threat-indicator bg-threat-neural/20 text-threat-neural border border-threat-neural/40 neon-text;
    box-shadow: 0 0 15px rgba(255, 20, 147, 0.4);
  }

  .neon-button {
    @apply relative overflow-hidden bg-transparent border-2 border-neon-blue text-neon-blue px-6 py-3 rounded-lg font-mono font-medium transition-all duration-300;
    text-shadow: 0 0 10px currentColor;
  }

  .neon-button:hover {
    @apply bg-neon-blue/10;
    box-shadow:
      0 0 20px rgba(0, 245, 255, 0.6),
      inset 0 0 20px rgba(0, 245, 255, 0.1);
    transform: translateY(-2px);
  }

  .neon-button:active {
    transform: translateY(0);
  }

  .neon-button:disabled {
    @apply opacity-50 cursor-not-allowed;
  }

  .neon-button-green {
    @apply neon-button border-neon-green text-neon-green;
  }

  .neon-button-green:hover {
    @apply bg-neon-green/10;
    box-shadow:
      0 0 20px rgba(57, 255, 20, 0.6),
      inset 0 0 20px rgba(57, 255, 20, 0.1);
  }

  .neon-button-purple {
    @apply neon-button border-neon-purple text-neon-purple;
  }

  .neon-button-purple:hover {
    @apply bg-neon-purple/10;
    box-shadow:
      0 0 20px rgba(191, 0, 255, 0.6),
      inset 0 0 20px rgba(191, 0, 255, 0.1);
  }

  .metric-card {
    @apply cyber-card-enhanced p-6 cyber-scan relative;
  }

  .metric-card-quantum {
    @apply quantum-card p-6 quantum-effect relative;
  }

  .metric-card-neural {
    @apply neural-card p-6 neural-effect relative;
  }

  .chart-container {
    @apply cyber-card-enhanced p-6;
  }

  .chart-container-quantum {
    @apply quantum-card p-6;
  }

  .chart-container-neural {
    @apply neural-card p-6;
  }

  .status-dot {
    @apply w-3 h-3 rounded-full animate-pulse;
    box-shadow: 0 0 10px currentColor;
  }

  .status-dot-large {
    @apply w-4 h-4 rounded-full animate-pulse;
    box-shadow: 0 0 15px currentColor;
  }

  .progress-bar {
    @apply relative h-2 bg-matrix-accent rounded-full overflow-hidden;
  }

  .progress-fill {
    @apply h-full rounded-full transition-all duration-1000 ease-out relative;
    background: linear-gradient(90deg, currentColor 0%, transparent 100%);
    box-shadow: 0 0 10px currentColor;
  }

  .progress-fill::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    animation: energy-flow 2s linear infinite;
  }

  .hologram-panel {
    @apply cyber-card-enhanced hologram-effect p-6;
    background: linear-gradient(
      135deg,
      rgba(17, 24, 39, 0.7),
      rgba(0, 245, 255, 0.05),
      rgba(31, 41, 55, 0.8)
    );
  }

  .data-stream-line {
    @apply relative h-px bg-current opacity-50;
    box-shadow: 0 0 5px currentColor;
  }

  .data-stream-line::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 50px;
    height: 100%;
    background: linear-gradient(90deg, transparent, currentColor, transparent);
    animation: energy-flow 2s linear infinite;
  }
}
